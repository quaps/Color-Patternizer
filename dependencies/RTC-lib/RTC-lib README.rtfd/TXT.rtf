{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fnil\fcharset0 Verdana;\f1\fswiss\fcharset0 ArialMT;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red190\green0\blue4;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14020\viewh16600\viewkind0
\deftab720
\pard\pardeftab720\qc

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
Karlheinz Essl et al.\
\

\f1\b\fs38 \expnd0\expndtw0\kerning0
RTC-lib 7.1\

\fs32 Real Time Composition Library for Max\

\f0\b0\fs26 \expnd0\expndtw0\kerning0
1992-2016\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
\
\
This software library \'96 a collection of patches and externals for {\field{\*\fldinst{HYPERLINK "http://www.cycling74.com/products/maxmsp/"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Max/MSP}} (an interactive graphical programming environment for multimedia, music, and MIDI running on a Macintosh; \'a9 by IRCAM / Cycling74) \'96 offers the possibility to experiment with a number of compositional techniques, such as serial procedures, permutations and controlled randomness. Most of these objects are geared towards straightforward processing of data. By using these specialized objects together in a patch, programming becomes much more clear and easy. Many functions that are often useful in algorithmic composition are provided with this library \'96 therefore the composer could concentrate rather on the composition than the programming aspects.\
\
The 
\i \expnd0\expndtw0\kerning0
Real Time Composition Library
\i0 \expnd0\expndtw0\kerning0
 (RTC-lib) was developed during my extensive work on {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/Lexikon-Sonate.html"}}{\fldrslt 
\b \cf2 \expnd0\expndtw0\kerning0
Lexikon-Sonate}} (1992 ff.), an interactive realtime composition for computer-controlled piano.\
\
Regardless the fact that it was conceived for a specific project it became more and more obvious that its functionalities are open and generic enough to be used by other composers in different compositional contexts. Based on paradigms which have been extracted from serial thinking (cf. {\field{\*\fldinst{HYPERLINK "http://www.essl.at/bibliogr/koenig-strq.html"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Gottfried Michael Koenig}} and {\field{\*\fldinst{HYPERLINK "http://www.essl.at/bibliogr/stockhausen.html"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Karlheinz Stockhausen}}) and its further development until nowadays it does not force towards a certain aesthetic, but provides a programming environment for testing and developing compositional strategies.\
\
The 
\i \expnd0\expndtw0\kerning0
Real Time Composition Library
\i0 \expnd0\expndtw0\kerning0
 comes with a Hypertext-like on-line help which provides a perfect overview on the library objects and their multiple relationships.\
\
\
\pard\pardeftab720

\f1\b\fs38 \cf0 \expnd0\expndtw0\kerning0
Content
\f0\b0\fs26 \expnd0\expndtw0\kerning0
\
The RTC-lib is composed of different categories of objects: {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/rtc/toolbox.html"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Toolbox}}, {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/rtc/chance.html"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Chance}}, {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/rtc/lists.html"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Lists}}, {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/rtc/harmony.html"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Harmony}}, {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/rtc/rhythm.html"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Rhythms}}, {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/rtc/envelopes.html"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Envelopes}}, {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/rtc/msp.html"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
MSP objects}}, {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/rtc/jitter.html"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Jitter objects}}.\
\
\pard\pardeftab720\qc

\f2\fs24 \cf0 \expnd0\expndtw0\kerning0
{{\NeXTGraphic rtc-overview_7.png \width7080 \height9020 \noorient
}¬}\pard\pardeftab720\qc

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
\
Content of the RTC-lib 7.1\
\pard\pardeftab720\qc

\fs22 \cf0 \expnd0\expndtw0\kerning0
copyleft 1993-2016
\fs26 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
\
\
The library consists mainly of "abstractions" (
\i \expnd0\expndtw0\kerning0
Max
\i0 \expnd0\expndtw0\kerning0
 patches that appear as objects) and a few so-called externals programmed in C. Most of them have been written by myself, with some contributions from other authors like {\field{\*\fldinst{HYPERLINK "http://iem.at/~eckel/"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
Gerhard Eckel}} (GMD, St. Augustin) and Serge Lemouton ({\field{\*\fldinst{HYPERLINK "http://www.ircam.fr/"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
IRCAM}}, Paris), James McCartney (namely his generic list objects), and Peter Elsea's (UCSC) selected list objects from his Lobjects library. Other contributions came from Gary Lee Nelson, Les Stuck, Chris Dobrian, Timothy Place, Orm Finnendahl, Trond Lossius and jasch. Because the library objects are highly dependent on each other, it is recommended not to take them apart.\
\
\
\pard\pardeftab720

\f1\b\fs38 \cf0 \expnd0\expndtw0\kerning0
Installation\
\pard\pardeftab720

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
For Max7:
\b0 \expnd0\expndtw0\kerning0
\
Copy the entire folder \'84RTC-lib_71\'94 into:\
	/User/Documents/Max 7/Packages/\
\

\b \expnd0\expndtw0\kerning0
For Max6:
\b0 \expnd0\expndtw0\kerning0
\
Copy the entire folder \'84RTC-lib_71\'94 into:\
	/Applications/Max 6.1/packages/\
\
Start Max. Go to the \'84Extras\'94 menu and select \'84RTC-Overview\'94 in order to access the RTC-lib\'92s online help system.\
\
\
\pard\pardeftab720

\f1\b\fs38 \cf0 \expnd0\expndtw0\kerning0
History
\f0\b0\fs26 \expnd0\expndtw0\kerning0
\
The development of the 
\i \expnd0\expndtw0\kerning0
RTC-lib
\i0 \expnd0\expndtw0\kerning0
 started in 1992 when I was working at IRCAM on a commission - {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/entsagung.html"}}{\fldrslt 
\b \cf2 \expnd0\expndtw0\kerning0
Entsagung}} for ensemble and live-electronics. Having worked with computer-aided composition algorithms before on an Atari using an experimental LOGO implementation I came across 
\i \expnd0\expndtw0\kerning0
Max
\i0 \expnd0\expndtw0\kerning0
. I immediately felt in love with it for it offered the possibility of realtime processing and interactivity. (In LOGO, it took many hours to calculate a score list which I had to transcribe into of musical notation in order to analyze it - a very time-consuming procedure).\
\
At this time, 
\i \expnd0\expndtw0\kerning0
Max
\i0 \expnd0\expndtw0\kerning0
 appeared as programming environment mainly optimized for MIDI processing. List operations (which are crucial for my own compositional thinking which stems from serialism) have not been implemented yet. Higher-level compositional tools were not available, only customized solutions for specific problems which were not geneneric enough to be used in different contexts.\
\
In order to create an evironment which enables one to concentrate rather on high-level compositional questions than on low-level technical problems, Gerhard Eckel and I started to develop a set of tools which became the corner stones of the RTC-lib. At the this time, Serge Lemouton (my musical assistant at IRCAM) wrote "nth" according to my indications, James McCartney released his "list objects", and a few years later Peter Elsea developed his "LObjects" (inspired by RTC-lib, as he told me). Some externals from these packages were included into the RTC-lib, and Peter Elsea was nice enough to port some of my abstractions (like trans-log) to C-externals.\
\
On this basis, I developed a large number of higher-level compositional algorithms written as "abstractions" (objects, coded in 
\i \expnd0\expndtw0\kerning0
Max
\i0 \expnd0\expndtw0\kerning0
): rhythm generators, harmony generators, chance operations, ramp generators, MSP functions etc. which are often based on those primordial externals that have been implemented by other authors.\
\
Those externals (the low-level side of the RTC-lib) need to be re-compiled for each operation system. We had to make the shift from 68k processors to PPC, and now to OSX. Thanks to Peter Elsea and Thomas Grill most of the externals has been ported to Windows XP and I transformed some Macintosh specific externals back to abstractions. Thanks also to Frank Barknecht who made a version for Pd.\
\
In 2008, the 
\i \expnd0\expndtw0\kerning0
RTC-lib
\i0 \expnd0\expndtw0\kerning0
 had to be updated in order to run on the new Intel processors. In order to ease the future maintenance, I reformulated most (but not all!) of the externals to abstractions.\
\
As of 10 Jan 2010, a new version of 
\i \expnd0\expndtw0\kerning0
RTC-lib 5.0 for Max5
\i0 \expnd0\expndtw0\kerning0
 has been released with completely rewritten help files. Here, most of the remaining C-externals have been eliminated in order to run the library independent of computer platforms and operating systems.\
\
\pard\pardeftab720

\i \cf0 \expnd0\expndtw0\kerning0
RTC-lib 6.0 for Max6
\i0 \expnd0\expndtw0\kerning0
 (released: 31 Jan 2014) was optimized for Max6.\
\
In 
\i \expnd0\expndtw0\kerning0
RTC-lib 7.0 for Max7
\i0 \expnd0\expndtw0\kerning0
 (released: 10 Aug 2015), all help files have been optimized for the new GUI of Max7. Amazingly, this version also works smoothly with Max6. This release also includes a couple of updated and improved objects.\
\

\i \expnd0\expndtw0\kerning0
RTC-lib 7.1 
\i0 \expnd0\expndtw0\kerning0
(released: 21 Sep 2016)
\i \expnd0\expndtw0\kerning0
 
\i0 \expnd0\expndtw0\kerning0
includes 64-bit versions of Peter Elsea\'92s Lobjects and some corrected help.files (thanks to Romain Versaevel!)
\i \expnd0\expndtw0\kerning0
\

\i0 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720

\f1\b\fs38 \cf0 \expnd0\expndtw0\kerning0
Licence
\f0\b0\fs26 \expnd0\expndtw0\kerning0
\
This software is copyrighted by Karlheinz Essl and others. The following terms apply to all files associated with the software unless explicitly disclaimed in individual files.\
\
The authors hereby grant permission to use, copy, modify, distribute, and license this software and its documentation for any purpose, provided that existing copyright notices are retained in all copies and that this notice is included verbatim in any distributions. No written agreement, license, or royalty fee is required for any of the authorized uses. Modifications to this software may be copyrighted by their authors and need not follow the licensing terms described here, provided that the new terms are clearly indicated on the first page of each file where they apply.\
\
IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\
\
THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\
\
RESTRICTED RIGHTS: Use, duplication or disclosure by the government is subject to the restrictions as set forth in subparagraph (c) (1) (ii) of the Rights in Technical Data and Computer Software Clause as DFARS 252.227-7013 and FAR 52.227-19.\
\
\
21 Sep 2016\
SDG}